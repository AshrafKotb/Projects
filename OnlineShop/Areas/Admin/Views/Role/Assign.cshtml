@model RoleUservm
@{
    ViewData["Title"] = "Assign";
}
<h2 class="text-dark"><strong>Assign Role</strong></h2>

<form asp-action="Assign" method="post" enctype="multipart/form-data">
    <div class="p-4 rounded border">
        <div asp-validation-summary="ModelOnly" class=" text-danger"></div>
        <h3 class="alert-danger">@ViewBag.msg</h3>

        <div class="form-group row">
            <div class=" col-lg-2">
                <strong>  <label asp-for="userid"></label></strong>
            </div>
            <div class="col-lg-5">
                <select asp-for="userid" asp-items="ViewBag.userid" class="form-control"></select>
                @*<input asp-for="ProductTypeID" class="form-control" />*@
            </div>
            <span asp-validation-for="userid" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class=" col-lg-2">
                <strong>    <label asp-for="roleid"></label></strong>
            </div>
            <div class="col-lg-5">
                <select asp-for="roleid" asp-items="ViewBag.roleid" class="form-control"></select>
                @*<input asp-for="ProductTypeID" class="form-control" />*@
            </div>
            <span asp-validation-for="roleid" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Assign" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-success"> Back</a>
        </div>
    </div>
</form>

@section Scripts
    {
    @{await Html.RenderPartialAsync(partialViewName: "_ValidationScriptsPartial"); }
}